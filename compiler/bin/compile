#!/usr/bin/env php
<?php 
declare (strict_types=1);
namespace _PhpScoper3d04c8135695;

use _PhpScoper3d04c8135695\Psr\Container\ContainerInterface;
use Symplify\EasyCodingStandard\Compiler\Console\EasyCodingStandardCompilerApplication;
use Symplify\EasyCodingStandard\Compiler\HttpKernel\EasyCodingStandardCompilerKernel;
// use EasyCodingStandard package autoload.php
require_once __DIR__ . '/../vendor/autoload.php';
final class ContainerFactory
{
    public function create() : \_PhpScoper3d04c8135695\Psr\Container\ContainerInterface
    {
        $environment = 'prod' . \random_int(1, 10000000);
        $kernel = new \Symplify\EasyCodingStandard\Compiler\HttpKernel\EasyCodingStandardCompilerKernel($environment, \true);
        $kernel->boot();
        return $kernel->getContainer();
    }
}
\class_alias('_PhpScoper3d04c8135695\\ContainerFactory', 'ContainerFactory', \false);
$container = (new \_PhpScoper3d04c8135695\ContainerFactory())->create();
/** @var EasyCodingStandardCompilerApplication $application */
$application = $container->get(\Symplify\EasyCodingStandard\Compiler\Console\EasyCodingStandardCompilerApplication::class);
exit($application->run());
